####################
#### VARIABLES #####
####################
argo_workflows_db: &argo_workflows_db "argo_workflows"
argo_workflows_db_secret: &argo_workflows_db_secret "gepaplexx-cicd-tools-postgresql"
argo_workflows_db_host: &argo_workflows_db_host "argo-workflows-postgres"

####################
## SEALED SECRETS ##
####################
sealedSecret:
  postgresql:
    postgres-password: ""
    password: ""
    username: ""

####################
##  ARGO  EVENTS  ##
####################
argo_events:
  enabled: true
  fullnameOverride: argo-events
  openshift: true
  crds:
    install: false
  controller:
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 250m
        memory: 256Mi
  configs:
    nats:
      versions:
       - version: 0.22.1
         natsStreamingImage: nats-streaming:0.22.1
         metricsExporterImage: natsio/prometheus-nats-exporter:0.8.0
    jetstream:
      versions: # Ã¼bernommen aus den auskommentierten default-values
       - version: latest
         natsImage: nats:2.8.2
         metricsExporterImage: natsio/prometheus-nats-exporter:0.9.1
         configReloaderImage: natsio/nats-server-config-reloader:0.7.0
         startCommand: /nats-server
       - version: "2.8.2"
         natsImage: nats:2.8.2
         metricsExporterImage: natsio/prometheus-nats-exporter:0.9.1
         configReloaderImage: natsio/nats-server-config-reloader:0.7.0
         startCommand: /nats-server
       - version: 2.8.2-alpine
         natsImage: nats:2.8.2-alpine
         metricsExporterImage: natsio/prometheus-nats-exporter:0.9.1
         configReloaderImage: natsio/nats-server-config-reloader:0.7.0
         startCommand: nats-server

####################
## ARGO WORFKLOWS ##
####################
argo_workflows:
  # sso configuration:
  sso:
    issuer: "https://sso.apps.clustername.example.com/realms/internal"
    clientSecret:
      name:
      key:
    clientId:
      name:
      key:
    rbac:
      enabled: true
  rbac:
    sudoGroup: Gepaplexx
    developGroup: Gepardec
    customerAdminGroup: "example"

  enabled: true
  fullnameOverride: argo-workflows
  server:
    ingress:
      enabled: true
      hosts:
        - workflows.example.com
      ingressClassName: "openshift-default"
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt
      tls:
        - hosts:
            - workflows.example.com
          secretName: workflows.example.com-tls
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi

  controller:
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi

    persistence:
      enabled: true
      postgresql:
        host: *argo_workflows_db_host
        port: 5432
        database: *argo_workflows_db
        tableName: argo_workflows
        userNameSecret:
          name: *argo_workflows_db_secret
          key: username
        passwordSecret:
          name: *argo_workflows_db_secret
          key: password

    metricsConfig:
      enabled: true

    serviceMonitor:
      enabled: true

  workflow:
    serviceAccount:
      create: true
      name: operate-workflow-sa


####################
##  ARGO ROLLOUT  ##
####################
argo_rollouts:
  enabled: false
  fullnameOverride: argo-rollouts
  # Controllerconfiguration:
  controller:
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
  # DashboardConfiguration
  dashboard:
    enabled: true
    ingress:
      enabled: true
      hosts:
        - "rollouts.example.com"
      tls:
        - hosts:
            - "rollouts.example.com"
          secretName: "rollouts.example.com"
      ingressClassName: "openshift-default"
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi


####################
##    ARGO  CD    ##
####################
argocd:
  enabled: true
  route:
    hostname: "argocd.example.com"
  applicationset:
    resources:
      limits:
        cpu: "1"
        memory: 1Gi
      requests:
        cpu: 250m
        memory: 512Mi
  controller:
    resources:
      limits:
        cpu: "1"
        memory: 2Gi
      requests:
        cpu: 250m
        memory: 512Mi
  dex:
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
  redis:
    resources:
      limits:
        cpu: 500m
        memory: 1Gi
      requests:
        cpu: 250m
        memory: 128Mi
  repo:
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
  server:
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
  rbac:
    defaultPolicy: ''
    policies:
      - 'p, role:gepardec-admin, applications, *, *, allow'
      - 'p, role:gepardec-admin, repositories, *, *, allow'
      - 'p, role:gepardec-admin, projects, *, *, allow'
      - 'g, Gepaplexx, role:admin'
      - 'g, Gepardec, role:gepardec-admin'

######################
##    Postgresql    ##
######################
postgresql:
  enabled: true
  fullnameOverride: *argo_workflows_db_host
  service:
    ports:
      postgresql: 5432
  auth:
    username: argo_workflow
    database: *argo_workflows_db
    password: ""
    existingSecret: *argo_workflows_db_secret
  primary:
    podSecurityContext:
      enabled: false
    containerSecurityContext:
      enabled: false
