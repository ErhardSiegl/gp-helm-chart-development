apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  creationTimestamp: null
  name: {{ .Values.argo_workflows.server.sso.clientSecret.name }}
  namespace: {{ .Release.Namespace }}
spec:
  encryptedData:
    {{ .Values.argo_workflows.server.sso.clientSecret.key }}: {{ .Values.argo_workflows.server.sso.clientSecret.secret }}
  template:
    data:
      {{ .Values.argo_workflows.server.sso.clientId.key }}: {{ .Values.argo_workflows.server.sso.clientId.id }}
    metadata: {}
---
### RBAC CONFIGURATION
## BEGINN DEFAULT READONLY USER
# Default ReadOnly SA for OAuth authenticated users
apiVersion: v1
kind: ServiceAccount
metadata:
  name: workflows-read-only
  namespace: {{ .Release.Namespace }}
  annotations:
    workflows.argoproj.io/rbac-rule: "'system:authenticated:oauth' in groups"
    workflows.argoproj.io/rbac-rule-precedence: "0"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: workflow-read-only-role
rules:
- apiGroups:
    - argoproj.io
  verbs:
    - "get"
    - "list"
    - "watch"
  resources:
  - analysisruns
  - analysistemplates
  - clusteranalysistemplates
  - clusterworkflowtemplates
  - cronworkflows
  - eventbus
  - eventsources
  - experiments
  - sensors
  - workfloweventbindings
  - workflows
  - workflowtaskresults
  - workflowtasksets
  - workflowtemplates
  - pipelines
# damit Logs der Workflows auf der UI ausgelesen werden können.
- apiGroups:
    - ""
  verbs:
    - get
    - list
    - watch
  resources:
    - pods/log
    - pods/status
    - pods
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: workflow-read-only-binding
  namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: workflow-read-only-role
subjects:
  - kind: ServiceAccount
    name: workflows-read-only
    namespace: {{ .Release.Namespace }}
## END DEFAULT READONLY USER
---
## BEGIN GEPAPLEXX ARGO WORKFLOWS SUPER USER
apiVersion: v1
kind: ServiceAccount
metadata:
  name: workflows-super-admin
  namespace: {{ .Release.Namespace }}
  annotations:
    workflows.argoproj.io/rbac-rule: "'{{ .Values.argo_workflows.rbac.sudoGroup }}' in groups"
    workflows.argoproj.io/rbac-rule-precedence: "999"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: workflows-super-admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: operate-workflow-role
subjects:
  - kind: ServiceAccount
    name: workflows-super-admin
    namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: workflows-super-admin-admin-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admin
subjects:
  - kind: ServiceAccount
    name: workflows-super-admin
    namespace: {{ .Release.Namespace }}
## END GEPAPLEXX ARGO WORKFLOWS SUPER USER
---
## BEGINN ARGO WORKFLOWS DEVELOPER PERMISSIONS
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: workflow-developer-role
rules:
  - apiGroups:
      - argoproj.io
    verbs:
      - "get"
      - "list"
      - "watch"
      - "update"
      - "create"
      - "delete"
      - "patch"
    resources:
    - analysisruns
    - analysistemplates
    - clusteranalysistemplates
    - clusterworkflowtemplates
    - cronworkflows
    - eventbus
    - eventsources
    - experiments
    - sensors
    - workfloweventbindings
    - workflows
    - workflowtaskresults
    - workflowtasksets
    - workflowtemplates
    - pipelines
  # damit Logs der Workflows auf der UI ausgelesen werden können.
  - apiGroups:
      - ""
    verbs:
      - get
      - list
      - watch
    resources:
      - pods/log
      - pods/status
      - pods
---
{{- if .Values.argo_workflows.rbac.clusterscoped.enabled }}
# ServiceAccount und Clusterrolebinding nur anlegen, wenn es eine Gruppe gibt, die Clusterweit Workflows anlegen darf
apiVersion: v1
kind: ServiceAccount
metadata:
  name: workflow-developer
  namespace: {{ .Release.Namespace }}
  annotations:
    workflows.argoproj.io/rbac-rule: "'{{ .Values.argo_workflows.rbac.clusterscoped.developerGroup }}' in groups"
    workflows.argoproj.io/rbac-rule-precedence: "100"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: workflow-developer-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: workflow-developer-role
subjects:
  - kind: ServiceAccount
    name: workflow-developer
    namespace: {{ .Release.Namespace }}
## END ARGO WORKFLOWS DEVELOPER PERMISSIONS
---
{{- end }}


