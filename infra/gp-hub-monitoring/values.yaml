monitoring:
  grafana:
    adminPassword: "override"
    ingress:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt
      hosts:
      - grafana.infra.gepaplexx.com
      tls:
       - secretName: grafana-general-tls
         hosts:
         - grafana.infra.gepaplexx.com

  prometheus:
    ingress:
      enabled: false
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt
      hosts:
      - prometheus.infra.gepaplexx.com
      tls:
      - secretName: prometheus-general-tls
        hosts:
        - prometheus.infra.gepaplexx.com
    prometheusSpec:
      retentionSize: 50GiB
      storageSpec:
        volumeClaimTemplate:
          spec:
            storageClassName: longhorn
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 50Gi
      ruleSelectorNilUsesHelmValues: false
      serviceMonitorSelectorNilUsesHelmValues: false
      podMonitorSelectorNilUsesHelmValues: false
      probeSelectorNilUsesHelmValues: false
      additionalServiceMonitors:
        namespaceSelector:
          any: "true"
      remoteRead: [ ]
  alertmanager:
    ingress:
      enabled: false
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt
      hosts:
      - alertmanager.infra.gepaplexx.com
      tls:
        - secretName: alertmanager-tls
          hosts:
          - alertmanager.infra.gepaplexx.com

  kubeScheduler:
    enabled: false # wird in microk8s anders gehandhabt
  kubeControllerManager:
    enabled: false # wird in microk8s anders gehandhabt
  kubeProxy:
    enabled: false # wird in microk8s anders gehandhabt


