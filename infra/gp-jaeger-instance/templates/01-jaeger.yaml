apiVersion: jaegertracing.io/v1
kind: Jaeger
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Values.namespace | default .Release.Namespace }}
spec:
  strategy: {{ .Values.strategy }}
  ingress:
    security: oauth-proxy
  storage:
    type: {{ .Values.storage.type }}
    {{- if eq .Values.storage.type "elasticsearch" }}
    elasticsearch:
      nodeCount: {{ .Values.elasticsearch.nodeCount }}
      redundancyPolicy: {{ .Values.elasticsearch.redundancyPolicy }}
      resources:
        requests:
          cpu: {{ .Values.elasticsearch.resources.requests.cpu }}
          memory: {{ .Values.elasticsearch.resources.requests.memory }}
        limits:
          cpu: {{ .Values.elasticsearch.resources.limits.cpu }}
          memory: {{ .Values.elasticsearch.resources.limits.memory }}
      storage:
        size: {{ .Values.elasticsearch.storage.size }}
    {{- if .Values.elasticsearch.indexCleaner.enabled }}
    esIndexCleaner:
      enabled:  {{ .Values.elasticsearch.indexCleaner.enabled }}
      numberOfDays: {{ .Values.elasticsearch.indexCleaner.numberOfDays }}
      schedule: "{{ .Values.elasticsearch.indexCleaner.schedule }}"
    {{- end }}
    esRollover:
      schedule: "{{ .Values.elasticsearch.rollover.schedule }}"
    {{- end }}
    options:
      es:
        index-prefix: "{{ .Values.elasticsearch.options.indexprefix}}"
  collector:
    resources:
      requests:
        memory: "{{ .Values.collector.resources.requests.memory }}"
        cpu: "{{ .Values.collector.resources.requests.cpu }}"
      limits:
        memory: "{{ .Values.collector.resources.limits.memory }}"
        cpu: "{{ .Values.collector.resources.limits.cpu }}"
    replicas: {{ .Values.collector.replicas }}
  query:
    replicas: {{ .Values.query.replicas }}
    resources:
      requests:
        memory: "{{ .Values.query.resources.requests.memory }}"
        cpu: "{{ .Values.query.resources.requests.cpu }}"
      limits:
        memory: "{{ .Values.query.resources.limits.memory }}"
        cpu: "{{ .Values.query.resources.limits.cpu }}"
  {{- if .Values.runOnInfra }}
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: node-role.kubernetes.io/infra
                operator: Exists
  {{- end }}
